<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 算法 | 伏笔]]></title>
  <link href="http://cpsa3.github.io/blog/categories/suan-fa/atom.xml" rel="self"/>
  <link href="http://cpsa3.github.io/"/>
  <updated>2015-03-22T00:43:17+08:00</updated>
  <id>http://cpsa3.github.io/</id>
  <author>
    <name><![CDATA[cpsa3]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[位运算实现整数的加减乘除]]></title>
    <link href="http://cpsa3.github.io/blog/2014/12/07/wei-yun-suan-shi-xian-zheng-shu-de-jia-jian-cheng-chu/"/>
    <updated>2014-12-07T17:57:53+08:00</updated>
    <id>http://cpsa3.github.io/blog/2014/12/07/wei-yun-suan-shi-xian-zheng-shu-de-jia-jian-cheng-chu</id>
    <content type="html"><![CDATA[<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;cstdio&gt;
using namespace std;

int AddUonRecursive(int a,int b){ // 非递归加法 
    for(int i=1; i; i&lt;&lt;=1)
        if(b&amp;i)
            for(int j=i; j; j&lt;&lt;=1)
                if(a&amp;j) a &amp;= ~j;
                else { a |= j;break; }
    return a;
} 

int AddRecursive(int a,int b){ //递归加法 
    return b ? AddRecursive( a^b, (a&amp;b)&lt;&lt;1 ) : a;
}

int GetReverse(int a){ // 取补码
    int i;
    for(i=1; i&amp;&amp;((a&amp;i)==0); i&lt;&lt;=1);
    for(i&lt;&lt;=1; i; i&lt;&lt;=1) a ^= i;
    return a;
}

int Minus(int a,int b){ //减法 
    //取减数补码 
    b = GetReverse(b);
    return  AddRecursive(a,b);
}

int Multiple(int a,int b){ //乘法 
    int ans = 0;
    for(int i=1; i; i&lt;&lt;=1,a&lt;&lt;=1)
        if(b&amp;i)
            ans = AddRecursive(ans,a);
        return ans;
} 

int Division(int a,int b){ //除法(正负都可以)

    int IsPositive = 1;

    if(a &amp; (1&lt;&lt;31)) { a = GetReverse(a); IsPositive ^= 1;}
    if(b &amp; (1&lt;&lt;31)) { b = GetReverse(b); IsPositive ^= 1;}

    int ans = 0;
    for(int i=31; i&gt;=0; i--){
        if((a&gt;&gt;i) &gt;= b){ //不能这样比较a &gt;= (b &lt;&lt; i) 会溢出 
            ans = AddUonRecursive(ans,1&lt;&lt;i);
            a = Minus(a,b&lt;&lt;i);
        }
    }
    return IsPositive ? ans : GetReverse(ans);
} 

int main(){

    int a,b;
    while(scanf("%d%d",&amp;a,&amp;b) != EOF){
        printf("非递归加法：%d\n",AddUonRecursive(a,b));
        printf("递归加法：%d\n",AddRecursive(a,b));
        printf("减法：%d\n",Minus(a,b));
        printf("乘法：%d\n",Multiple(a,b));
        printf("除法：%d\n",Division(a,b));
    }
    return 0;
}

/*
6 -2
非递归加法：4
递归加法：4
减法：8
乘法：-12
除法：-3                                                                    
*/
</code></pre>

<p>参考：<a href="http://blog.csdn.net/walkinginthewind/article/details/6886489">http://blog.csdn.net/walkinginthewind/article/details/6886489</a></p>
]]></content>
  </entry>
  
</feed>
